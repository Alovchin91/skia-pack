diff --git a/modules/svg/include/SkSVGDOM.h b/modules/svg/include/SkSVGDOM.h
index c9e0b312dc..a9cc540e43 100644
--- a/modules/svg/include/SkSVGDOM.h
+++ b/modules/svg/include/SkSVGDOM.h
@@ -46,8 +46,33 @@ public:
         return Builder().make(str);
     }
 
-    const SkSize& containerSize() const;
+    /**
+     * Returns the root (outermost) SVG element.
+     */
+    SkSVGSVG* getRoot() const { return fRoot.get(); }
+    /**
+     * Specify a "container size" for the SVG dom.
+     *
+     * This is used to resolve the initial viewport when the root SVG width/height are specified
+     * in relative units.
+     *
+     * If the root dimensions are in absolute units, then the container size has no effect since
+     * the initial viewport is fixed.
+     */
     void setContainerSize(const SkSize&);
+    /**
+     * DEPRECATED: use getRoot()->intrinsicSize() to query the root element intrinsic size.
+     *
+     * Returns the SVG dom container size.
+     *
+     * If the client specified a container size via setContainerSize(), then the same size is
+     * returned.
+     *
+     * When unspecified by clients, this returns the intrinsic size of the root element, as defined
+     * by its width/height attributes.  If either width or height is specified in relative units
+     * (e.g. "100%"), then the corresponding intrinsic size dimension is zero.
+     */
+    const SkSize& containerSize() const;
 
     // Returns the node with the given id, or nullptr if not found.
     sk_sp<SkSVGNode>* findNodeById(const char* id);
